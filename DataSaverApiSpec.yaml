swagger: "2.0"
info:
  title: Data Saver API
  description: API description of the data ingestion.
  version: 1.0.0
host: a285ef17b5e344b58853cbf5f453f9fa-901701855.eu-central-1.elb.amazonaws.com
schemes:
  - http
  - https
paths:
  /pedestrians:
    post:
      summary: Records the pedestrian data added on demand.
      description: Records time series of coordonates resulting from the moving of the entity.
      consumes:
        - application/json
      produces:
        - text/plain
      responses:
        default:
          description: "The request has been fulfilled and resulted in a new resource being created."
        201:
          description: Created
        500:
          description: InternalServerError, if the data cannot be parsed
      parameters:
        - in: "body"
          name: "body"
          description: "New pedestrian object with different coordonates and velocities."
          required: true
          schema:
            type: "object"
            items:
              $ref: "#/definitions/PedestrianDataNotification"
  /vehicles:
    post:
      summary: Records vehicle data sent on demand.
      description: Records time series of coordonates resulting from the moving of the entity.
      produces:
        - text/plain
      responses:
        default:
          description: "The request has been fulfilled and resulted in a new resource being created."
        201:
          description: Created
        500:
          description: InternalServerError, if the data cannot be parsed
      parameters:
        - in: "body"
          name: "body"
          description: "New pedestrian object with different coordonates and velocities."
          required: true
          schema:
            type: "object"
            items:
              $ref: "#/definitions/CarDataNotification"
definitions:
  PedestrianDataNotification:
    type: object
    properties:
      MessageId:
        type: string
        format: "uuid"
      Message:
        type: array
        items:
          type: object
          $ref: "#/definitions/NewPedestrian"
      Timestamp:
        type: string
        format: "date-time"

  CarDataNotification:
    type: object
    properties:
      MessageId:
        type: string
        format: "uuid"
      Message:
        type: array
        items:
          type: object
          $ref: "#/definitions/NewCar"
      Timestamp:
        type: string
        format: "date-time"
  NewPedestrian:
    type: object
    properties:
      Time:
        type: integer
        format: "float"
      PedID:
        type: string
        format: string
      Role:
        type: string
        format: string
      Gender:
        type: string
        enum:
          - Male
          - Female
          - Other
      Age:
        type: string
      PosX:
        type: integer
        format: "float"
      PosY:
        type: integer
        format: "float"
      PosZ:
        type: integer
        format: "float"
      VelX:
        type: integer
        format: "float"
      VelY:
        type: integer
        format: "float"
      VelZ:
        type: integer
        format: "float"
      RotPitch:
        type: integer
        format: "float"
      RotRoll:
        type: integer
        format: "float"
      RotYaw:
        type: integer
        format: "float"
      Respawned:
        type: boolean
      Fitness:
        type: integer
        format: "float"
      Deaths:
        type: integer
        format: "int32"
      KeyPressedForward:
        type: boolean
      KeyPressedBack:
        type: boolean
      KeyPressedLeft:
        type: boolean
      KeyPressedRight:
        type: boolean
      HeadAngle:
        type: integer
        format: "float"
      MouseX:
        type: integer
        format: "float"
      MouseY:
        type: integer
        format: "float"
      TrafficLights:
        type: string
        enum:
          - Red
          - Green
          - Yellow
          - N/A
  NewCar:
    type: object
    properties:
      Time:
        type: integer
        format: "float"
      CarID:
        type: string
        format: string
      PosX:
        type: integer
        format: "float"
      PosY:
        type: integer
        format: "float"
      PosZ:
        type: integer
        format: "float"
      VelX:
        type: integer
        format: "float"
      VelY:
        type: integer
        format: "float"
      VelZ:
        type: integer
        format: "float"
      RotPitch:
        type: integer
        format: "float"
      RotRoll:
        type: integer
        format: "float"
      RotYaw:
        type: integer
        format: "float"
      TrafficLights:
        type: string
        enum:
          - Red
          - Green
          - Yellow
          - N/A